{"version":3,"sources":["webpack:///./src/app/login/login-routing.module.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.scss","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/login/login.module.ts","webpack:///./src/app/login/login.service.ts"],"names":[],"mappings":"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","file":"login-login-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './login.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: LoginComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class LoginRoutingModule {}\r\n","module.exports = \"<div class=\\\"login-page\\\">\\r\\n        <div class=\\\"row justify-content-md-center\\\">\\r\\n            <div class=\\\"col-md-8\\\">\\r\\n                <img src=\\\"assets/images/SCAVA_logo_tagline_side.jpg\\\" width=\\\"600px\\\" />\\r\\n                <h2>SCAVA is an open-source platform for automatically analysing the source code, bug tracking systems, and communication\\r\\n                    channels of open source software projects.</h2>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row justify-content-md-center\\\">\\r\\n            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"mode==1\\\">\\r\\n                <strong>Bad credentials!</strong> Invalid username or password.\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row justify-content-md-center\\\">\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"onLoggedin(f.value)\\\">\\r\\n                    <div class=\\\"form-content\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <input type=\\\"text\\\" name=\\\"username\\\" ngModel=\\\"\\\" class=\\\"form-control input-underline input-lg\\\" placeholder=\\\"Username\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <input type=\\\"password\\\" name=\\\"password\\\" ngModel=\\\"\\\" class=\\\"form-control input-underline input-lg\\\" placeholder=\\\"Password\\\" />\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn rounded-btn\\\" [disabled]=\\\"!f.valid\\\">Login</button>\\r\\n                    &nbsp;\\r\\n                    <a class=\\\"btn rounded-btn\\\" [routerLink]=\\\"['/signup']\\\">Register</a>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\"","module.exports = \":host {\\n  display: block; }\\n\\n.login-page {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  overflow: auto;\\n  background: skyblue;\\n  text-align: center;\\n  color: #fff;\\n  padding: 3em; }\\n\\n.login-page .col-lg-4 {\\n    padding: 0; }\\n\\n.login-page .input-lg {\\n    height: 46px;\\n    padding: 10px 16px;\\n    font-size: 18px;\\n    line-height: 1.3333333;\\n    border-radius: 0; }\\n\\n.login-page .input-underline {\\n    background: 0 0;\\n    border: none;\\n    box-shadow: none;\\n    border-bottom: 2px solid rgba(255, 255, 255, 0.5);\\n    color: #fff;\\n    border-radius: 0; }\\n\\n.login-page .input-underline:focus {\\n    border-bottom: 2px solid #fff;\\n    box-shadow: none; }\\n\\n.login-page .rounded-btn {\\n    border-radius: 50px;\\n    color: rgba(255, 255, 255, 0.8);\\n    background: skyblue;\\n    border: 2px solid rgba(255, 255, 255, 0.8);\\n    font-size: 18px;\\n    line-height: 40px;\\n    padding: 0 25px; }\\n\\n.login-page .rounded-btn:hover,\\n  .login-page .rounded-btn:focus,\\n  .login-page .rounded-btn:active,\\n  .login-page .rounded-btn:visited {\\n    color: white;\\n    border: 2px solid white;\\n    outline: none; }\\n\\n.login-page h2 {\\n    font-weight: 300;\\n    margin-top: 20px;\\n    margin-bottom: 10px;\\n    font-size: 36px; }\\n\\n.login-page h2 small {\\n      color: rgba(255, 255, 255, 0.7); }\\n\\n.login-page .form-group {\\n    padding: 8px 0; }\\n\\n.login-page .form-group input::-webkit-input-placeholder {\\n      color: rgba(255, 255, 255, 0.6) !important; }\\n\\n.login-page .form-group input:-moz-placeholder {\\n      /* Firefox 18- */\\n      color: rgba(255, 255, 255, 0.6) !important; }\\n\\n.login-page .form-group input::-moz-placeholder {\\n      /* Firefox 19+ */\\n      color: rgba(255, 255, 255, 0.6) !important; }\\n\\n.login-page .form-group input:-ms-input-placeholder {\\n      color: rgba(255, 255, 255, 0.6) !important; }\\n\\n.login-page .form-content {\\n    padding: 40px 0; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { routerTransition } from '../router.animations';\r\nimport { LoginService } from './login.service';\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.scss'],\r\n    animations: [routerTransition()]\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n    private mode: Number = 0;\r\n\r\n    constructor(\r\n        private  router: Router,\r\n        private loginService: LoginService\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    onLoggedin(data) {\r\n        localStorage.clear();\r\n        this.loginService.login(data).subscribe(resp => {\r\n                const jwtToken = resp.headers.get('Authorization');\r\n                this.loginService.saveToken(jwtToken);\r\n                console.log(jwtToken);\r\n                localStorage.setItem('isLoggedin', 'true');\r\n                this.router.navigateByUrl('/home');\r\n            }, error => {\r\n                this.mode = 1;\r\n            }\r\n        );\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { LoginRoutingModule } from './login-routing.module';\r\nimport { LoginComponent } from './login.component';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n    imports: [CommonModule, LoginRoutingModule, FormsModule],\r\n    declarations: [LoginComponent]\r\n})\r\nexport class LoginModule {}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  private resourceUrl = 'http://localhost:8086/api/authentication';\n\n  constructor(\n      private httpClient: HttpClient\n  ) { }\n\n  login(data) {\n    console.log(data);\n    return this.httpClient.post(this.resourceUrl, data, {observe: 'response'});\n  }\n\n  saveToken(token: string) {\n      localStorage.setItem('jwtToken', token);\n  }\n\n}\n"],"sourceRoot":""}